version: "3.5"

services:
  web:
    env_file:
      - .env
    build:
      context: ./web
      args:
        ELASTIC_SEARCH_CREDENTIALS: $ELASTIC_SEARCH_CREDENTIALS
        ELASTIC_SEARCH_SERVER: $ELASTIC_SEARCH_SERVER
        CONTACT_MESSAGE_RELAY_URL: $CONTACT_MESSAGE_RELAY_URL
        RECAPTCHA_KEY: $RECAPTCHA_KEY
        MEDIA_URL: $MEDIA_URL
        API_URL: $API_URL
    image: xram_memory/web
    container_name: "xram_memory_web"
    tmpfs:
      - /tmp
    restart: always
    networks:
      - web
    environment:
      ELASTIC_SEARCH_SERVER: $ELASTIC_SEARCH_SERVER
      ELASTIC_SEARCH_CREDENTIALS: $ELASTIC_SEARCH_CREDENTIALS
      CONTACT_MESSAGE_RELAY_URL: $CONTACT_MESSAGE_RELAY_URL
      RECAPTCHA_KEY: $RECAPTCHA_KEY
      MEDIA_URL: $MEDIA_URL
      API_URL: $API_URL

  es-node1:
    image: amazon/opendistro-for-elasticsearch:0.8.0
    container_name: es-node1
    environment:
      - cluster.name=xram-memory
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - network.host=0.0.0.0 # required if not using the demo Security configuration
    ulimits:
      memlock:
        soft: -1
        hard: -1
    env_file:
      - .env
    volumes:
      - es-data1:/usr/share/elasticsearch/data
      - ./elastic_search/certificates/out/root-ca.pem:/usr/share/elasticsearch/config/root-ca.pem

      - ./elastic_search/certificates/out/es-node1.pem:/usr/share/elasticsearch/config/esnode.pem
      - ./elastic_search/certificates/out/es-node1.key:/usr/share/elasticsearch/config/esnode-key.key

      - ./elastic_search/certificates/out/es-node1_http.pem:/usr/share/elasticsearch/config/esnode_http.pem
      - ./elastic_search/certificates/out/es-node1_http.key:/usr/share/elasticsearch/config/esnode-key_http.key

      - ./elastic_search/certificates/out/kirk.pem:/usr/share/elasticsearch/config/kirk.pem
      - ./elastic_search/certificates/out/kirk.key:/usr/share/elasticsearch/config/kirk-key.pem

      - ./elastic_search/custom-elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elastic_search/internal_users.yml:/usr/share/elasticsearch/plugins/opendistro_security/securityconfig/internal_users.yml
    networks:
      - internal
      - web

  webadmin:
    build: ./webadmin
    image: xram_memory/webadmin
    container_name: "xram_memory_webadmin"
    env_file:
      - .env
      - backend.env
    tmpfs:
      - /tmp
    restart: always
    volumes:
      - media/:/app/media/
      - static/:/app/staticfiles/
    networks:
      - web
      - internal


  database:
    image: library/mariadb
    container_name: "xram_memory_db"
    tmpfs:
      - /tmp
    restart: always
    env_file:
      - backend.env
    volumes:
      - database/:/var/lib/mysql
    networks:
      - internal
    ports:
      - 3306

  files:
    image: kyma/docker-nginx
    container_name: "xram_memory_files"
    env_file:
      - .env
    tmpfs:
      - /tmp
    restart: always
    volumes:
      - media/:/var/www/media/
      - static/:/var/www/static/
    networks:
      - web

  celery-worker:
    build: ./celery_worker
    image: xram_memory/celery_worker
    tmpfs:
      - /tmp
    restart: always
    env_file:
      - .env
      - backend.env
    volumes:
      - media/:/app/media/
    networks:
      - internal

  redis:
    image: wodby/redis:4.0
    container_name: xram_memory_redis
    restart: always
    networks:
      - internal
    sysctls:
      net.core.somaxconn: '511'
    ports:
      - 6379

  reverse-proxy:
    image: traefik # The official Traefik docker image
    container_name: proxy
    command: --api
    restart: always
    env_file:
      - ./proxy/.env
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - ./proxy/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./elastic_search/certificates/out/root-ca.pem:/etc/traefik/root-ca.pem
      #- ./proxy/acme.json:/acme.json:rw
    networks:
      web:
        aliases:
          - es1.xram-memory.local
          - xram-memory.local

  certs-extractor:
    image: danielhuisman/traefik-certificate-extractor
    restart: always
    volumes:
      - ./proxy/:/app/data/:ro
      - ./proxy/certificates/:/app/certs:rw

  contact_message_relay:
    build: ./contact_message_relay
    image: xram_memory/contact_message_relay
    container_name: "xram_memory_contact_mr"
    env_file:
      - .env
      - contact_message_relay.env
    tmpfs:
      - /tmp
    restart: always
    networks:
      - web


networks:
  web:
    external: true
  internal:

volumes:
  media:
    external:
      name: xram_memory_webadmin_media

  static:
    external:
      name: xram_memory_webadmin_static

  database:
    external:
      name: xram_memory_db_data

  es-data1:
    external:
      name: xram_memory_es1_data